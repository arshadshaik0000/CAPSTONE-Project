// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiTenantTaskManagementSystem.Models;

#nullable disable

namespace MultiTenantTaskManagementSystem.Migrations
{
    [DbContext(typeof(MultiTenantTaskDbContext))]
    [Migration("20250602103928_AddCategoryIsApproved")]
    partial class AddCategoryIsApproved
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminViewDto", b =>
                {
                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.DTOs.DepartmentStatsDto", b =>
                {
                    b.Property<int>("CompletedCount")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("InProgressCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskCount")
                        .HasColumnType("int");

                    b.Property<int>("ToDoCount")
                        .HasColumnType("int");

                    b.Property<int>("UserCount")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.DTOs.TaskWithUserDto", b =>
                {
                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<string>("AssignedToUserUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.DTOs.UserProductivityDto", b =>
                {
                    b.Property<int>("CompletedTasks")
                        .HasColumnType("int");

                    b.Property<int>("InProgressTasks")
                        .HasColumnType("int");

                    b.Property<int>("ToDoTasks")
                        .HasColumnType("int");

                    b.Property<int>("TotalTasks")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentId")
                        .HasName("PK_Departments");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK_Roles");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId")
                        .HasName("PK_Tasks");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TenantId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.TaskCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("PK_TaskCategories");

                    b.HasIndex("TenantId");

                    b.ToTable("TaskCategories");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.TaskComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("CommentId")
                        .HasName("PK_TaskComments");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskComments");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK_Users");

                    b.HasIndex("RoleId");

                    b.HasIndex("TenantId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Task", b =>
                {
                    b.HasOne("MultiTenantTaskManagementSystem.Models.User", "ApprovedByUser")
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_Tasks_ApprovedBy");

                    b.HasOne("MultiTenantTaskManagementSystem.Models.User", "AssignedToUser")
                        .WithMany("Tasks")
                        .HasForeignKey("AssignedToUserId")
                        .HasConstraintName("FK_Tasks_AssignedToUserId");

                    b.HasOne("MultiTenantTaskManagementSystem.Models.TaskCategory", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Tasks_CategoryId");

                    b.HasOne("MultiTenantTaskManagementSystem.Models.Department", "Tenant")
                        .WithMany("Tasks")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_Tasks_TenantId");

                    b.Navigation("ApprovedByUser");

                    b.Navigation("AssignedToUser");

                    b.Navigation("Category");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.TaskCategory", b =>
                {
                    b.HasOne("MultiTenantTaskManagementSystem.Models.Department", "Tenant")
                        .WithMany("TaskCategories")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskCategories_TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.TaskComment", b =>
                {
                    b.HasOne("MultiTenantTaskManagementSystem.Models.User", "CreatedByUser")
                        .WithMany("TaskComments")
                        .HasForeignKey("CreatedByUserId")
                        .HasConstraintName("FK_TaskComments_CreatedByUserId");

                    b.HasOne("MultiTenantTaskManagementSystem.Models.Task", "Task")
                        .WithMany("TaskComments")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TaskComments_TaskId");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.User", b =>
                {
                    b.HasOne("MultiTenantTaskManagementSystem.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_RoleId");

                    b.HasOne("MultiTenantTaskManagementSystem.Models.Department", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK_Users_TenantId");

                    b.Navigation("Role");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Department", b =>
                {
                    b.Navigation("TaskCategories");

                    b.Navigation("Tasks");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.Task", b =>
                {
                    b.Navigation("TaskComments");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("MultiTenantTaskManagementSystem.Models.User", b =>
                {
                    b.Navigation("TaskComments");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
